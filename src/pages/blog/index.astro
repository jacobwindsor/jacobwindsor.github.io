---
import BaseLayout from "../../layouts/BaseLayout.astro";
import { getCollection } from 'astro:content';
import { format } from 'date-fns';

const blogPosts = (await getCollection('blog'))
  .filter((post) => !post.data.draft)
  .sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf());
---

<BaseLayout
  title="Blog - Jacob Windsor"
  description="Technical insights, engineering practices, and thoughts on building scalable solutions in life sciences."
>
  <main class="min-h-screen py-20 px-6 lg:px-8 bg-background">
    <div class="container mx-auto max-w-4xl">
      <div class="text-center mb-16">
        <h1 class="text-4xl lg:text-5xl font-semibold mb-4 text-foreground tracking-tight">
          Blog
        </h1>
        <div class="w-12 h-px bg-primary mx-auto mb-6"></div>
        <p class="text-muted-foreground text-sm max-w-2xl mx-auto font-light">
          Technical insights, engineering practices, and thoughts on building scalable solutions in life sciences.
        </p>
      </div>

      {blogPosts.length === 0 ? (
        <div class="text-center py-20">
          <p class="text-muted-foreground">No blog posts yet. Check back soon!</p>
        </div>
      ) : (
        <div class="space-y-8">
          {blogPosts.map((post) => (
            <article class="border border-border/50 rounded-md p-6 hover:border-primary/50 transition-colors bg-card">
              <a href={`/blog/${post.slug}/`} class="block">
                <div class="flex flex-col lg:flex-row gap-6">
                  {post.data.image && (
                    <div class="flex-shrink-0">
                      <img
                        src={post.data.image}
                        alt={post.data.title}
                        class="w-full lg:w-48 h-48 object-cover rounded-md"
                      />
                    </div>
                  )}
                  <div class="flex-1">
                    <h2 class="text-2xl font-semibold mb-2 text-foreground hover:text-primary transition-colors">
                      {post.data.title}
                    </h2>
                    <p class="text-sm text-muted-foreground mb-4 font-light">
                      {post.data.description}
                    </p>
                    <div class="flex items-center gap-4 text-xs text-muted-foreground">
                      <time datetime={post.data.pubDate.toISOString()}>
                        {format(post.data.pubDate, 'MMMM d, yyyy')}
                      </time>
                      {post.data.tags.length > 0 && (
                        <div class="flex gap-2">
                          {post.data.tags.slice(0, 3).map((tag) => (
                            <span class="px-2 py-1 rounded bg-muted text-muted-foreground">
                              {tag}
                            </span>
                          ))}
                        </div>
                      )}
                    </div>
                  </div>
                </div>
              </a>
            </article>
          ))}
        </div>
      )}
    </div>
  </main>
</BaseLayout>
